{
  // 继承自 Vue 官方提供的 DOM 类型支持配置，适用于浏览器运行环境
  "extends": "@vue/tsconfig/tsconfig.dom.json",

  // 包含哪些文件参与 TypeScript 编译
  "include": [
    "env.d.ts",                      // Vite 创建项目时自动生成的环境类型声明
    "src/**/*.ts",                   // 所有 ts 文件
    "src/**/*.d.ts",                 // 所有类型声明文件
    "src/**/*.tsx",                  // 支持使用 JSX/TSX（适用于 Vue 中的 <script lang="tsx">）
    "src/**/*.vue",                 // 所有 Vue 单文件组件
    "src/types/auto-imports.d.ts",   // 自动引入类型文件，例如 unplugin-auto-import 生成的声明
    "src/types/element.d.ts"
  ],

  // 排除不参与编译的文件和目录
  "exclude": [
    "node_modules",                 // 排除依赖
    "dist",                         // 排除打包输出目录
    "**/*.js"                       // 排除所有 JS 文件（可选）
  ],

  // 编译器选项
  "compilerOptions": {
    // 构建信息缓存文件，配合增量编译
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",

    // 模块解析的基础目录，通常设为项目根目录
    "baseUrl": "./",

    // 声明全局类型，例如 Vite、DefineOptions 宏
    "types": [
      "vite/client",                               // Vite 提供的全局类型（如 import.meta.env）
      "unplugin-vue-define-options/macros-global"  // 支持 defineOptions 宏的全局声明
    ],

    // 编译目标为最新 ECMAScript 语法（如 async/await、可选链等）
    "lib": ["ESNext", "DOM", "DOM.Iterable"],
    "target": "ESNext",
    "module": "ESNext",                            // 使用 ES 模块化，配合 Vite 更高效

    "useDefineForClassFields": true,               // 使用符合最新 TC39 标准的类字段语义

    "skipLibCheck": true,                          // 跳过第三方库的类型检查，提升性能

    "moduleResolution": "bundler",                 // TS 5.1+ 的新特性，优化 Vite 模块解析性能
    "allowImportingTsExtensions": true,            // 允许导入 .ts/.tsx 扩展的模块

    "resolveJsonModule": true,                     // 支持 import json 文件
    "isolatedModules": true,                       // 每个文件作为独立模块编译（Vite 推荐）

    "esModuleInterop": true,                       // CommonJS 默认导入兼容（如：import fs from 'fs'）

    "noEmit": true,                                // 不输出编译后的 JS 文件（交由 Vite 处理）

    "jsx": "preserve",                             // 保留 JSX，不做转换，交由 Vue 编译器处理

    "sourceMap": true,                             // 生成 Source Map，便于调试

    "strict": true,                                // 开启所有严格类型检查

    "noUnusedLocals": false,                       // 不检查未使用的局部变量
    "noUnusedParameters": false,                   // 不检查未使用的函数参数
    "noFallthroughCasesInSwitch": true,            // switch 语句中 case 遗漏 break 会报错

    "allowSyntheticDefaultImports": true,          // 允许对没有默认导出的模块使用默认导入

    // 配置路径别名，用于简化导入路径
    "paths": {
      "@/*": ["./src/*"]                           // @/xxx => src/xxx
    }
  }
}
